[
    {
        "url": "http://www.cs.cmu.edu/~NatProg/barista.html",
        "text": [
            "barista",
            "barista",
            "is",
            "a",
            "new",
            "implementation",
            "framework",
            "implemented",
            "in",
            "citrus",
            "which",
            "enables",
            "the",
            "creation",
            "of",
            "a",
            "new",
            "class",
            "of",
            "highly",
            "visual",
            "highly",
            "interactive",
            "code",
            "editors",
            "editors",
            "built",
            "with",
            "barista",
            "can",
            "offer",
            "standard",
            "features",
            "such",
            "as",
            "conventional",
            "text",
            "editing",
            "interaction",
            "techniques",
            "immediate",
            "feedback",
            "about",
            "errors",
            "and",
            "code",
            "completion",
            "menus",
            "however",
            "barista",
            "editors",
            "can",
            "also",
            "support",
            "drag",
            "and",
            "drop",
            "interaction",
            "techniques",
            "new",
            "types",
            "of",
            "embedded",
            "tools",
            "and",
            "alternative",
            "views",
            "of",
            "code"
        ],
        "content": "Barista.  Barista is a new implementation framework, implemented in Citrus, which enables the creation of a new class of highly visual, highly interactive code editors. Editors built with Barista can offer standard features such as conventional text-editing interaction techniques, immediate feedback about errors and code-completion menus. However, Barista editors can also support drag and drop interaction techniques, new types of embedded tools, and alternative views of code.",
        "id": 2336,
        "title": "Barista"
    },
    {
        "url": "http://www.cs.cmu.edu/~NatProg/citrus.html",
        "text": [
            "citrus",
            "graphical",
            "structured",
            "editors",
            "for",
            "code",
            "and",
            "data",
            "have",
            "many",
            "benefits",
            "over",
            "editing",
            "raw",
            "xml",
            "but",
            "they",
            "can",
            "be",
            "difficult",
            "and",
            "time",
            "consuming",
            "to",
            "build",
            "using",
            "modern",
            "programming",
            "languages",
            "citrus",
            "is",
            "a",
            "new",
            "object",
            "oriented",
            "interpreted",
            "language",
            "that",
            "is",
            "designed",
            "to",
            "simplify",
            "the",
            "creation",
            "of",
            "such",
            "editors",
            "by",
            "providing",
            "first",
            "class",
            "language",
            "support",
            "for",
            "one",
            "way",
            "constraints",
            "custom",
            "events",
            "and",
            "event",
            "handlers",
            "and",
            "value",
            "restrictions",
            "and",
            "validation",
            "we",
            "re",
            "using",
            "citrus",
            "to",
            "implement",
            "several",
            "novel",
            "software",
            "development",
            "to"
        ],
        "content": "Citrus.  Graphical structured editors for code and data have many benefits over editing raw XML, but they can be difficult and time-consuming to build using modern programming languages. Citrus is a new object-oriented, interpreted language that is designed to simplify the creation of such editors, by providing first-class language support for one-way constraints, custom events and event handlers, and value restrictions and validation. We're using Citrus to implement several novel software development to",
        "id": 2337,
        "title": "Citrus"
    },
    {
        "url": "http://www.cs.cmu.edu/~NatProg/crystal.html",
        "text": [
            "crystal",
            "crystal",
            "is",
            "application",
            "framework",
            "written",
            "in",
            "java",
            "and",
            "using",
            "the",
            "swing",
            "toolkit",
            "that",
            "extends",
            "the",
            "work",
            "of",
            "the",
            "whyline",
            "enabling",
            "the",
            "creation",
            "of",
            "software",
            "applications",
            "that",
            "allow",
            "users",
            "to",
            "ask",
            "questions",
            "about",
            "their",
            "data",
            "and",
            "the",
            "application",
            "s",
            "state"
        ],
        "content": "Crystal.  Crystal is application framework (written in Java and using the Swing toolkit) that extends the work of the Whyline, enabling the creation of software applications that allow users to ask questions about their data and the application's state.",
        "id": 2338,
        "title": "Crystal"
    },
    {
        "url": "http://www.cs.cmu.edu/~NatProg/euclase.html",
        "text": [
            "euclase",
            "the",
            "euclase",
            "project",
            "is",
            "exploring",
            "who",
            "interaction",
            "designers",
            "are",
            "what",
            "types",
            "of",
            "work",
            "they",
            "do",
            "and",
            "how",
            "they",
            "think",
            "about",
            "and",
            "express",
            "ideas",
            "about",
            "interactivity",
            "the",
            "ultimate",
            "goal",
            "is",
            "to",
            "design",
            "new",
            "programming",
            "languages",
            "and",
            "environments",
            "that",
            "are",
            "more",
            "suitable",
            "for",
            "this",
            "kind",
            "of",
            "design",
            "work",
            "than",
            "any",
            "of",
            "today",
            "s",
            "interactive",
            "prototyping",
            "tools",
            "like",
            "adobe",
            "flash",
            "or",
            "visual",
            "basic"
        ],
        "content": "Euclase.  The Euclase project is exploring who interaction designers are, what types of work they do, and how they think about and express ideas about interactivity. The ultimate goal is to design new programming languages and environments that are more suitable for this kind of design work than any of today's interactive prototyping tools like Adobe Flash or Visual Basic.",
        "id": 2339,
        "title": "Euclase"
    },
    {
        "url": "http://www.cs.cmu.edu/~NatProg/fact-finding.html",
        "text": [
            "fact",
            "finding",
            "how",
            "do",
            "developers",
            "understand",
            "unfamiliar",
            "code",
            "and",
            "what",
            "makes",
            "it",
            "hard",
            "we",
            "have",
            "surveyed",
            "and",
            "interviewed",
            "developers",
            "to",
            "find",
            "common",
            "activities",
            "and",
            "problems",
            "in",
            "the",
            "lab",
            "we",
            "observed",
            "how",
            "developers",
            "seek",
            "learn",
            "explain",
            "critique",
            "propose",
            "and",
            "implement",
            "facts",
            "and",
            "revealed",
            "how",
            "experienced",
            "developers",
            "are",
            "more",
            "productive",
            "we",
            "hope",
            "our",
            "models",
            "will",
            "inform",
            "the",
            "design",
            "of",
            "tools",
            "for",
            "helping",
            "developers",
            "with",
            "these",
            "tasks"
        ],
        "content": "Fact finding.  How do developers understand unfamiliar code, and what makes it hard? We have surveyed and interviewed developers to find common activities and problems.  In the lab, we observed how developers seek, learn, explain, critique, propose, and implement facts and revealed how experienced developers are more productive. We hope our models will inform the design of tools for helping developers with these tasks.",
        "id": 2340,
        "title": "Fact finding"
    },
    {
        "url": "http://www.cs.cmu.edu/~NatProg/graphite.html",
        "text": [
            "graphite",
            "by",
            "cyrus",
            "omar",
            "and",
            "youngseok",
            "yoon",
            "using",
            "graphite",
            "library",
            "developers",
            "can",
            "annotate",
            "their",
            "classes",
            "with",
            "pointers",
            "to",
            "specialized",
            "palettes",
            "implemented",
            "using",
            "modern",
            "html",
            "technologies",
            "an",
            "ide",
            "extension",
            "discovers",
            "these",
            "palettes",
            "based",
            "on",
            "the",
            "code",
            "context",
            "when",
            "the",
            "user",
            "invokes",
            "the",
            "code",
            "completion",
            "command",
            "users",
            "interact",
            "with",
            "these",
            "palettes",
            "to",
            "provide",
            "parameters",
            "which",
            "the",
            "palette",
            "uses",
            "to",
            "generate",
            "the",
            "appropriate",
            "code",
            "for",
            "insertion",
            "at",
            "the",
            "cursor"
        ],
        "content": "Graphite by Cyrus Omar and YoungSeok Yoon.  Using Graphite, library developers can annotate their classes with pointers to specialized palettes, implemented using modern HTML5 technologies. An IDE extension discovers these palettes based on the code context when the user invokes the code completion command. Users interact with these palettes to provide parameters, which the palette uses to generate the appropriate code for insertion at the cursor.",
        "id": 2341,
        "title": "Graphite by Cyrus Omar and YoungSeok Yoon"
    },
    {
        "url": "http://www.cs.cmu.edu/~NatProg/jasper.html",
        "text": [
            "jasper",
            "jasper",
            "is",
            "an",
            "eclipse",
            "plug",
            "in",
            "that",
            "allows",
            "you",
            "to",
            "gather",
            "three",
            "types",
            "of",
            "information",
            "into",
            "a",
            "single",
            "document",
            "references",
            "to",
            "code",
            "snippets",
            "textual",
            "notes",
            "and",
            "links",
            "to",
            "parts",
            "of",
            "web",
            "pages",
            "in",
            "doing",
            "so",
            "jasper",
            "allows",
            "you",
            "to",
            "keep",
            "track",
            "of",
            "your",
            "development",
            "tasks",
            "in",
            "a",
            "clean",
            "and",
            "distinct",
            "fashion",
            "much",
            "like",
            "bug",
            "reports",
            "are",
            "a",
            "central",
            "source",
            "for",
            "information",
            "about",
            "a",
            "particular",
            "bug",
            "these",
            "documents",
            "can",
            "then",
            "be",
            "stored",
            "for",
            "later",
            "and",
            "shared",
            "with",
            "colleagues",
            "perhaps",
            "by",
            "attaching",
            "them",
            "to",
            "bug",
            "reports",
            "to",
            "document",
            "the"
        ],
        "content": "Jasper.  Jasper is an Eclipse plug-in that allows you to gather three types of information into a single document: references to code snippets, textual notes, and links to parts of web pages. In doing so, Jasper allows you to keep track of your development tasks in a clean and distinct fashion, much like bug reports are a central source for information about a particular bug. These documents can then be stored for later and shared with colleagues, perhaps by attaching them to bug reports to document the ",
        "id": 2342,
        "title": "Jasper"
    },
    {
        "url": "http://www.cs.cmu.edu/~NatProg/mica.html",
        "text": [
            "mica",
            "mica",
            "is",
            "an",
            "experimental",
            "tool",
            "from",
            "the",
            "natural",
            "programming",
            "research",
            "group",
            "at",
            "cmu",
            "to",
            "aid",
            "programmers",
            "in",
            "finding",
            "api",
            "classes",
            "and",
            "methods"
        ],
        "content": "Mica.  Mica is an experimental tool from the Natural Programming research group at CMU to aid programmers in finding API classes and methods.",
        "id": 2343,
        "title": "Mica"
    },
    {
        "url": "http://www.cs.cmu.edu/~NatProg/slate.html",
        "text": [
            "slate",
            "many",
            "spreadsheet",
            "systems",
            "allow",
            "users",
            "to",
            "specify",
            "units",
            "with",
            "their",
            "data",
            "e",
            "g",
            "lbs",
            "in",
            "order",
            "to",
            "help",
            "users",
            "detect",
            "errors",
            "some",
            "of",
            "which",
            "cost",
            "millions",
            "of",
            "dollars",
            "slate",
            "is",
            "the",
            "first",
            "to",
            "allow",
            "users",
            "to",
            "specify",
            "the",
            "object",
            "of",
            "measurement",
            "e",
            "g",
            "lbs",
            "of",
            "apples",
            "in",
            "addition",
            "by",
            "intelligently",
            "propagating",
            "labels",
            "representing",
            "these",
            "objects",
            "slate",
            "helps",
            "users",
            "identify",
            "errors",
            "in",
            "their",
            "spreadsheets",
            "that",
            "other",
            "spreadsheet",
            "systems",
            "can",
            "t"
        ],
        "content": "Slate.  Many spreadsheet systems allow users to specify units with their data (e.g. 5 lbs.) in order to help users detect errors (some of which cost millions of dollars). Slate is the first to allow users to specify the object of measurement (e.g., 5 lbs. of apples), in addition. By intelligently propagating labels representing these objects, Slate helps users identify errors in their spreadsheets that other spreadsheet systems can't.",
        "id": 2344,
        "title": "Slate"
    },
    {
        "url": "http://www.cs.cmu.edu/~NatProg/topes.html",
        "text": [
            "topes",
            "topes",
            "is",
            "a",
            "new",
            "user",
            "extensible",
            "model",
            "for",
            "semi",
            "structured",
            "data",
            "items",
            "each",
            "tope",
            "defines",
            "how",
            "to",
            "recognize",
            "a",
            "kind",
            "of",
            "data",
            "item",
            "based",
            "on",
            "format",
            "and",
            "context",
            "and",
            "how",
            "to",
            "transform",
            "that",
            "kind",
            "of",
            "item",
            "among",
            "valid",
            "formats",
            "to",
            "show",
            "the",
            "usefulness",
            "of",
            "this",
            "model",
            "we",
            "will",
            "provide",
            "an",
            "environment",
            "to",
            "help",
            "end",
            "user",
            "programmers",
            "to",
            "create",
            "share",
            "and",
            "apply",
            "topes",
            "enabling",
            "these",
            "users",
            "to",
            "quickly",
            "implement",
            "data",
            "validation",
            "and",
            "reformatting",
            "functionality"
        ],
        "content": "Topes.  Topes is a new user-extensible model for semi-structured data items. Each tope defines how to recognize a kind of data item based on format and context, and how to transform that kind of item among valid formats. To show the usefulness of this model, we will provide an environment to help end-user programmers to create, share, and apply topes, enabling these users to quickly implement data validation and reformatting functionality.",
        "id": 2345,
        "title": "Topes"
    },
    {
        "url": "http://www.cs.cmu.edu/~NatProg/update-paths.html",
        "text": [
            "update",
            "paths",
            "changing",
            "code",
            "can",
            "be",
            "hard",
            "when",
            "you",
            "don",
            "t",
            "know",
            "when",
            "it",
            "is",
            "triggered",
            "or",
            "what",
            "its",
            "callees",
            "do",
            "based",
            "on",
            "a",
            "static",
            "analysis",
            "that",
            "finds",
            "feasible",
            "update",
            "paths",
            "in",
            "java",
            "we",
            "are",
            "developing",
            "a",
            "tool",
            "to",
            "answer",
            "questions",
            "like",
            "when",
            "does",
            "this",
            "happen",
            "or",
            "what",
            "does",
            "this",
            "do",
            "by",
            "visualizing",
            "update",
            "paths"
        ],
        "content": "Update paths.  Changing code can be hard when you don't know when it is triggered or what its callees do. Based on a static analysis that finds feasible update paths in Java, we are developing a tool to answer questions like When does this happen? or What does this do? by visualizing update paths.",
        "id": 2346,
        "title": "Update paths"
    },
    {
        "url": "http://www.cs.cmu.edu/~NatProg/whyline-java.html",
        "text": [
            "whyline",
            "for",
            "java",
            "by",
            "andrew",
            "ko",
            "usually",
            "when",
            "we",
            "see",
            "something",
            "go",
            "wrong",
            "in",
            "a",
            "program",
            "s",
            "output",
            "we",
            "have",
            "to",
            "guess",
            "what",
            "code",
            "is",
            "causing",
            "the",
            "problem",
            "we",
            "usually",
            "guess",
            "wrong",
            "the",
            "whyline",
            "for",
            "java",
            "allows",
            "you",
            "to",
            "instead",
            "ask",
            "questions",
            "about",
            "a",
            "program",
            "s",
            "output",
            "and",
            "get",
            "answers",
            "in",
            "terms",
            "of",
            "the",
            "code",
            "responsible",
            "click",
            "the",
            "screenshot",
            "above",
            "to",
            "watch",
            "a",
            "second",
            "demonstration",
            "or",
            "download",
            "the",
            "video",
            "mb",
            "and",
            "because",
            "i",
            "love",
            "my",
            "iphone",
            "here",
            "s",
            "an",
            "iphone",
            "version",
            "too"
        ],
        "content": "Whyline for Java by Andrew Ko.  Usually when we see something go wrong in a program's output, we have to guess what code is causing the problem. We usually guess wrong. The Whyline for Java allows you to instead ask questions about a program's output and get answers in terms of the code responsible. Click the screenshot above to watch a 90 second demonstration or download the video  (5 MB). (And because I love my iPhone, here's an iPhone version too).",
        "id": 2347,
        "title": "Whyline for Java by Andrew Ko"
    },
    {
        "url": "http://www.cs.cmu.edu/~NatProg/whyline.html",
        "text": [
            "the",
            "whyline",
            "the",
            "whyline",
            "is",
            "a",
            "debugging",
            "tool",
            "that",
            "allows",
            "programmers",
            "to",
            "ask",
            "why",
            "did",
            "and",
            "why",
            "didn",
            "t",
            "questions",
            "about",
            "their",
            "program",
            "s",
            "output",
            "programmers",
            "choose",
            "from",
            "a",
            "set",
            "of",
            "questions",
            "generated",
            "automatically",
            "via",
            "static",
            "and",
            "dynamic",
            "analyses",
            "and",
            "the",
            "tool",
            "provides",
            "answers",
            "in",
            "terms",
            "of",
            "the",
            "runtime",
            "events",
            "that",
            "caused",
            "or",
            "prevented",
            "the",
            "desired",
            "output",
            "in",
            "user",
            "studies",
            "of",
            "the",
            "whyline",
            "prototyped",
            "in",
            "the",
            "alice",
            "programming",
            "environment",
            "programmers",
            "using",
            "the",
            "whyline",
            "to",
            "debug",
            "spent",
            "a",
            "factor",
            "of",
            "less",
            "time",
            "debugging",
            "the"
        ],
        "content": "The Whyline.  The Whyline is a debugging tool that allows programmers to ask \"Why did\" and \"Why didn't\" questions about their program's output. Programmers choose from a set of questions generated automatically via static and dynamic analyses, and the tool provides answers in terms of the runtime events that caused or prevented the desired output. In user studies of the Whyline (prototyped in the Alice programming environment), programmers using the Whyline to debug spent a factor of 8 less time debugging the",
        "id": 2348,
        "title": "The Whyline"
    },
    {
        "url": "http://www.cs.cmu.edu/~bej/usa/index.html",
        "text": [
            "usability",
            "and",
            "software",
            "architecture",
            "recent",
            "research",
            "conducted",
            "jointly",
            "by",
            "the",
            "u",
            "sa",
            "project",
            "at",
            "the",
            "human",
            "computer",
            "interaction",
            "institute",
            "software",
            "engineering",
            "institute",
            "at",
            "carnegie",
            "mellon",
            "university",
            "has",
            "investigated",
            "the",
            "relationship",
            "between",
            "architectural",
            "decisions",
            "and",
            "usability",
            "this",
            "project",
            "gives",
            "usability",
            "specialists",
            "and",
            "software",
            "developers",
            "alike",
            "an",
            "explicit",
            "link",
            "between",
            "their",
            "two",
            "realms",
            "of",
            "expertise",
            "allowing",
            "both",
            "to",
            "participate",
            "more",
            "effectively",
            "in",
            "the",
            "early",
            "design",
            "decisions",
            "of",
            "an",
            "interactive",
            "system",
            "it",
            "gives",
            "the",
            "entire",
            "design",
            "te"
        ],
        "content": "Usability and Software Architecture.  Recent research conducted jointly by the U&SA project\nat the Human-Computer Interaction Institute & Software Engineering Institute\nat Carnegie Mellon University has investigated the relationship between\narchitectural decisions and usability. This project gives usability specialists\nand software developers alike an explicit link between their two realms\nof expertise, allowing both to participate more effectively in the early\ndesign decisions of an interactive system. It gives the entire design te",
        "id": 2349,
        "title": "Usability and Software Architecture"
    },
    {
        "url": "http://www.cs.cmu.edu/~euklas/",
        "text": [
            "euklas",
            "eclipse",
            "users",
            "keystrokes",
            "lessened",
            "by",
            "attaching",
            "from",
            "samples",
            "euklas",
            "enhances",
            "eclipse",
            "s",
            "javascript",
            "editor",
            "by",
            "highlighting",
            "errors",
            "in",
            "the",
            "source",
            "code",
            "providing",
            "quick",
            "fixes",
            "and",
            "explanations",
            "the",
            "provided",
            "support",
            "is",
            "especially",
            "useful",
            "for",
            "errors",
            "that",
            "have",
            "been",
            "introduced",
            "by",
            "copying",
            "and",
            "pasting",
            "example",
            "code",
            "please",
            "check",
            "out",
            "the",
            "screenshots",
            "watch",
            "the",
            "video",
            "and",
            "read",
            "the",
            "documentation",
            "to",
            "get",
            "additional",
            "information",
            "about",
            "euklas",
            "you",
            "can",
            "download",
            "euklas",
            "here"
        ],
        "content": "Euklas - Eclipse Users' Keystrokes Lessened by Attaching from Samples.  Euklas enhances Eclipse's JavaScript editor by (#1) highlighting errors in the source code, (#2)\nproviding quick fixes, and (#3) explanations. The provided support is especially useful for errors that\nhave been introduced by copying and pasting example code. Please check out the\nscreenshots, watch the video and read the\ndocumentation to get additional information about Euklas. You can\ndownload Euklas here.",
        "id": 2350,
        "title": "Euklas - Eclipse Users' Keystrokes Lessened by Attaching from Samples"
    },
    {
        "url": "http://www.cs.cmu.edu/~genetics/",
        "text": [
            "genetics",
            "cognitive",
            "tutor",
            "genetics",
            "is",
            "one",
            "of",
            "the",
            "fundamental",
            "unifying",
            "themes",
            "of",
            "biology",
            "the",
            "human",
            "genome",
            "project",
            "and",
            "advances",
            "in",
            "genetics",
            "and",
            "biodiversity",
            "will",
            "revolutionize",
            "biology",
            "medicine",
            "and",
            "industry",
            "however",
            "genetics",
            "can",
            "be",
            "an",
            "intimidating",
            "challenge",
            "for",
            "students",
            "across",
            "the",
            "full",
            "range",
            "of",
            "post",
            "secondary",
            "institutions",
            "and",
            "the",
            "growing",
            "demand",
            "for",
            "genetics",
            "education",
            "outstrips",
            "the",
            "supply",
            "of",
            "qualified",
            "teachers"
        ],
        "content": "Genetics Cognitive Tutor:.  Genetics is one of the fundamental unifying themes of biology. The Human Genome Project and advances\nin genetics and biodiversity will revolutionize biology, medicine and industry. However, genetics can be an intimidating challenge for students across the full range of post-secondary institutions and the growing demand for genetics education outstrips the supply of qualified teachers.",
        "id": 2351,
        "title": "Genetics Cognitive Tutor:"
    },
    {
        "url": "http://www.cs.cmu.edu/~mllee/mem.html",
        "text": [
            "lifelogging",
            "memory",
            "aid",
            "for",
            "people",
            "with",
            "alzheimer",
            "s",
            "disease",
            "title",
            "summary",
            "primary",
            "image"
        ],
        "content": "Lifelogging Memory Aid for People with Alzheimer's Disease.  --\nTitle\nSummary\nPrimary Image",
        "id": 2352,
        "title": "Lifelogging Memory Aid for People with Alzheimer's Disease"
    },
    {
        "url": "http://www.cs.cmu.edu/~pane/research.html",
        "text": [
            "hands",
            "to",
            "explore",
            "this",
            "i",
            "created",
            "a",
            "new",
            "programming",
            "system",
            "for",
            "children",
            "called",
            "hands",
            "human",
            "centered",
            "advances",
            "for",
            "novice",
            "development",
            "of",
            "software",
            "throughout",
            "the",
            "design",
            "of",
            "hands",
            "i",
            "focused",
            "on",
            "hci",
            "and",
            "usability",
            "i",
            "began",
            "by",
            "reviewing",
            "organizing",
            "and",
            "interpreting",
            "prior",
            "research",
            "on",
            "beginners",
            "tr",
            "some",
            "open",
            "questions",
            "led",
            "me",
            "to",
            "study",
            "how",
            "children",
            "and",
            "other",
            "non",
            "programmers",
            "naturally",
            "express",
            "problem",
            "solutions",
            "these",
            "studies",
            "exposed",
            "some",
            "of",
            "the",
            "ways",
            "that",
            "current",
            "programming",
            "languages",
            "force",
            "people",
            "to",
            "express"
        ],
        "content": "HANDS.  To explore this, I created a new programming system for children\ncalled HANDS (Human-centered Advances for Novice Development of\nSoftware).  Throughout the design of HANDS, I focused on HCI and\nusability. I began by reviewing, organizing and interpreting prior\nresearch on beginners (TR96). Some\nopen questions led me to study how children and other non-programmers\nnaturally express problem solutions. These studies exposed some of the\nways that current programming languages force people to express",
        "id": 2353,
        "title": "HANDS"
    },
    {
        "url": "http://www.cs.cmu.edu/~webcrystal/",
        "text": [
            "webcrystal",
            "by",
            "kerry",
            "chang",
            "examples",
            "have",
            "been",
            "widely",
            "used",
            "in",
            "the",
            "area",
            "of",
            "web",
            "design",
            "to",
            "help",
            "web",
            "authors",
            "create",
            "web",
            "pages",
            "however",
            "without",
            "actually",
            "understanding",
            "how",
            "an",
            "example",
            "is",
            "constructed",
            "people",
            "often",
            "have",
            "trouble",
            "extracting",
            "the",
            "elements",
            "they",
            "want",
            "and",
            "incorporating",
            "them",
            "into",
            "their",
            "own",
            "work",
            "webcrystal",
            "is",
            "a",
            "web",
            "development",
            "tool",
            "that",
            "allows",
            "users",
            "to",
            "ask",
            "questions",
            "about",
            "how",
            "to",
            "reareate",
            "desired",
            "elements",
            "from",
            "an",
            "example",
            "web",
            "oage",
            "it",
            "provides",
            "answers",
            "using",
            "a",
            "textual",
            "description",
            "and",
            "a",
            "customized",
            "code",
            "snippet",
            "that",
            "can",
            "be",
            "cop"
        ],
        "content": "WebCrystal by Kerry Chang.  Examples have been widely used in the area of web design to help web authors create web pages. However, without actually understanding how an example is constructed, people often have trouble extracting the elements they want and incorporating them into their own work. WebCrystal is a web development tool that allows users to ask questions about how to reareate desired elements from an example web oage. It provides answers using a textual description and a customized code snippet that can be cop",
        "id": 2354,
        "title": "WebCrystal by Kerry Chang"
    },
    {
        "url": "http://www.cs.cmu.edu/~NatProg/apiusability.html",
        "text": [
            "api",
            "usability",
            "we",
            "are",
            "investigating",
            "the",
            "implications",
            "of",
            "choosing",
            "particular",
            "api",
            "design",
            "patterns",
            "on",
            "programmer",
            "productivity",
            "and",
            "api",
            "learning",
            "our",
            "results",
            "have",
            "shown",
            "that",
            "programmers",
            "require",
            "significantly",
            "more",
            "time",
            "to",
            "construct",
            "an",
            "object",
            "with",
            "a",
            "factory",
            "than",
            "with",
            "a",
            "constructor",
            "while",
            "performing",
            "both",
            "context",
            "sensitive",
            "and",
            "context",
            "free",
            "tasks",
            "and",
            "that",
            "programmers",
            "strongly",
            "prefer",
            "and",
            "were",
            "more",
            "effective",
            "with",
            "apis",
            "that",
            "did",
            "not",
            "require",
            "constructor",
            "parameters",
            "we",
            "expect",
            "to",
            "explore",
            "similar",
            "design",
            "tradeoffs",
            "in",
            "future",
            "studi"
        ],
        "content": "API Usability.  We are investigating the implications of choosing particular API design patterns on programmer productivity and API learning. Our results have shown that programmers require significantly more time to construct an object with a factory than with a constructor\nwhile performing both context-sensitive and context-free tasks\nand that programmers strongly prefer and were more effective with APIs that did not require constructor parameters.\nWe expect to explore similar design tradeoffs in future studi",
        "id": 2335,
        "title": "API Usability"
    }
]